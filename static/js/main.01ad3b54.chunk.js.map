{"version":3,"sources":["components/Feedback/Feedback.module.css","components/Feedback/Section.js","components/Feedback/Controls.js","components/Feedback/Notification.js","components/Feedback/Statistics.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","container","Button","feedback","onLeaveFeedback","button","type","data-feedback","onClick","Controls","options","map","option","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","statistics","result","App","state","handleFeedback","target","dataset","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,UAAY,4BAA4B,MAAQ,wBAAwB,OAAS,yBAAyB,SAAW,2BAA2B,OAAS,yBAAyB,WAAa,+B,kKCgBlMC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAEC,UAAtB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACzB,qBAAKE,UAAWC,IAAEF,SAAlB,SAA6BA,QCH7BI,EAAS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAC1B,OACE,wBACEL,UAAWC,IAAEK,OACbC,KAAK,SACLC,gBAAeJ,EACfK,QAASJ,EAJX,SAMGD,KAoBQM,EAfE,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASN,EAAsB,EAAtBA,gBAC3B,OAAOM,EAAQC,KAAI,SAAAC,GAAM,OACvB,cAAC,EAAD,CAEET,SAAUS,EACVR,gBAAiBA,GAFZ,CAACQ,QCZGC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KC4B3BC,EAzBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACGD,EAAQ,GACP,sBAAKpB,UAAWC,IAAEqB,WAAlB,UACE,oBAAGtB,UAAWC,IAAEsB,OAAhB,mBAA+BN,KAC/B,oBAAGjB,UAAWC,IAAEsB,OAAhB,sBAAkCL,KAClC,oBAAGlB,UAAWC,IAAEsB,OAAhB,kBAA8BJ,KAC9B,oBAAGnB,UAAWC,IAAEsB,OAAhB,oBAAgCH,KAChC,oBAAGpB,UAAWC,IAAEsB,OAAhB,gCAA4CF,EAA5C,WAGO,IAAVD,GAAe,cAAC,EAAD,CAAcL,QAAQ,0BC+B7BS,E,4MA1CbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,eAAiB,YAAiB,IACxBtB,EADuB,EAAbuB,OACUC,QAApBxB,SACR,EAAKyB,UAAS,SAAAC,GAAS,sBAAQ1B,EAAW0B,EAAU1B,GAAY,O,EAElE2B,mBAAqB,WACnB,OAAO,EAAKN,MAAMR,KAAO,EAAKQ,MAAMP,QAAU,EAAKO,MAAMN,K,EAE3Da,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKT,MAAMR,KAAO,EAAKc,qBAAwB,M,uDAE1D,IAAD,EACwBI,KAAKV,MAA5BR,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQe,KAAKJ,qBACbV,EAAqBc,KAAKH,kCAChC,OACE,gCACE,cAAC,EAAD,CAASlC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEa,QAAS,CAAC,OAAQ,UAAW,OAC7BN,gBAAiB8B,KAAKT,mBAG1B,cAAC,EAAD,CAAS5B,MAAM,aAAf,SACE,cAAC,EAAD,CACEmB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GAnCde,aCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.01ad3b54.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Feedback_container__2S-cS\",\"title\":\"Feedback_title__3QxGx\",\"result\":\"Feedback_result__3uor3\",\"children\":\"Feedback_children__3wXJr\",\"button\":\"Feedback_button__2RIEB\",\"statistics\":\"Feedback_statistics__1Br-J\"};","import PropTypes from 'prop-types';\r\nimport s from '../Feedback/Feedback.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={s.container}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      <div className={s.children}>{children}</div>\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Feedback.module.css';\n\nconst Button = ({ feedback, onLeaveFeedback }) => {\n  return (\n    <button\n      className={s.button}\n      type=\"button\"\n      data-feedback={feedback}\n      onClick={onLeaveFeedback}\n    >\n      {feedback}\n    </button>\n  );\n};\n\nconst Controls = ({ options, onLeaveFeedback }) => {\n  return options.map(option => (\n    <Button\n      key={[option]}\n      feedback={option}\n      onLeaveFeedback={onLeaveFeedback}\n    />\n  ));\n};\n\nControls.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Feedback.module.css';\nimport Notification from './Notification';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      {total > 0 && (\n        <div className={s.statistics}>\n          <p className={s.result}>Good: {good}</p>\n          <p className={s.result}>Neutral: {neutral}</p>\n          <p className={s.result}>Bad: {bad}</p>\n          <p className={s.result}>Total: {total}</p>\n          <p className={s.result}>Positive feedback: {positivePercentage} %</p>\n        </div>\n      )}\n      {total === 0 && <Notification message=\"No feedback given\" />}\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport Section from './components/Feedback/Section';\nimport Controls from './components/Feedback/Controls';\nimport Statistics from './components/Feedback/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n    this.setState(prevState => ({ [feedback]: prevState[feedback] + 1 }));\n  };\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <Controls\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.handleFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}